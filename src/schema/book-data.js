"use strict";module.exports = validate30;module.exports.default = validate30;const schema42 = {"$schema":"https://json-schema.org/draft/2020-12/schema","$id":"book-data","type":"object","required":["metadata","parts","cover"],"properties":{"id":{"type":"string","minLength":1},"metadata":{"type":"object","required":["publisher","source","author","authorID","title","tags","subject","status","rating","updated","published","lang"],"properties":{"publisher":{"type":"string","format":"uri"},"source":{"type":"string","format":"uri"},"author":{"type":"string","minLength":1},"authorID":{"type":"string","format":"uri"},"title":{"type":"string","minLength":1},"tags":{"type":"array","default":[],"items":{"type":"string"}},"subject":{"type":["string","boolean"],"default":""},"status":{"type":"string","default":"unknown","enum":["complete","in-progress","hiatus","abandoned"]},"rating":{"type":"string","default":"unknown","minLength":1},"updated":{"type":"number","minimum":1,"multipleOf":1},"published":{"type":"number","minimum":1,"multipleOf":1},"lang":{"type":"string","default":""},"description":{"type":"string"},"cover":{"type":"string","default":""}}},"parts":{"type":"array","default":[],"items":{"type":"object","required":["title"],"properties":{"title":{"type":"string"},"text":{"type":"string"}}}},"cover":{"type":"string","default":""}}};const func7 = require("ajv/dist/runtime/ucs2length").default;const func0 = require("ajv/dist/runtime/equal").default;const formats0 = require("ajv-formats/dist/formats").fullFormats.uri;function validate30(data, {instancePath="", parentData, parentDataProperty, rootData=data, dynamicAnchors={}}={}){/*# sourceURL="book-data" */;let vErrors = null;let errors = 0;const evaluated0 = validate30.evaluated;if(evaluated0.dynamicProps){evaluated0.props = undefined;}if(evaluated0.dynamicItems){evaluated0.items = undefined;}if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((((data.metadata === undefined) && (missing0 = "metadata")) || ((data.parts === undefined) && (missing0 = "parts"))) || ((data.cover === undefined) && (missing0 = "cover"))){validate30.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {if(data.id !== undefined){let data0 = data.id;const _errs1 = errors;if(errors === _errs1){if(typeof data0 === "string"){if(func7(data0) < 1){validate30.errors = [{instancePath:instancePath+"/id",schemaPath:"#/properties/id/minLength",keyword:"minLength",params:{limit: 1},message:"must NOT have fewer than 1 characters"}];return false;}}else {validate30.errors = [{instancePath:instancePath+"/id",schemaPath:"#/properties/id/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid0 = _errs1 === errors;}else {var valid0 = true;}if(valid0){if(data.metadata !== undefined){let data1 = data.metadata;const _errs3 = errors;if(errors === _errs3){if(data1 && typeof data1 == "object" && !Array.isArray(data1)){let missing1;if(((((((((((((data1.publisher === undefined) && (missing1 = "publisher")) || ((data1.source === undefined) && (missing1 = "source"))) || ((data1.author === undefined) && (missing1 = "author"))) || ((data1.authorID === undefined) && (missing1 = "authorID"))) || ((data1.title === undefined) && (missing1 = "title"))) || ((data1.tags === undefined) && (missing1 = "tags"))) || ((data1.subject === undefined) && (missing1 = "subject"))) || ((data1.status === undefined) && (missing1 = "status"))) || ((data1.rating === undefined) && (missing1 = "rating"))) || ((data1.updated === undefined) && (missing1 = "updated"))) || ((data1.published === undefined) && (missing1 = "published"))) || ((data1.lang === undefined) && (missing1 = "lang"))){validate30.errors = [{instancePath:instancePath+"/metadata",schemaPath:"#/properties/metadata/required",keyword:"required",params:{missingProperty: missing1},message:"must have required property '"+missing1+"'"}];return false;}else {if(data1.publisher !== undefined){let data2 = data1.publisher;const _errs5 = errors;if(errors === _errs5){if(errors === _errs5){if(typeof data2 === "string"){if(!(formats0(data2))){validate30.errors = [{instancePath:instancePath+"/metadata/publisher",schemaPath:"#/properties/metadata/properties/publisher/format",keyword:"format",params:{format: "uri"},message:"must match format \""+"uri"+"\""}];return false;}}else {validate30.errors = [{instancePath:instancePath+"/metadata/publisher",schemaPath:"#/properties/metadata/properties/publisher/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid1 = _errs5 === errors;}else {var valid1 = true;}if(valid1){if(data1.source !== undefined){let data3 = data1.source;const _errs7 = errors;if(errors === _errs7){if(errors === _errs7){if(typeof data3 === "string"){if(!(formats0(data3))){validate30.errors = [{instancePath:instancePath+"/metadata/source",schemaPath:"#/properties/metadata/properties/source/format",keyword:"format",params:{format: "uri"},message:"must match format \""+"uri"+"\""}];return false;}}else {validate30.errors = [{instancePath:instancePath+"/metadata/source",schemaPath:"#/properties/metadata/properties/source/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid1 = _errs7 === errors;}else {var valid1 = true;}if(valid1){if(data1.author !== undefined){let data4 = data1.author;const _errs9 = errors;if(errors === _errs9){if(typeof data4 === "string"){if(func7(data4) < 1){validate30.errors = [{instancePath:instancePath+"/metadata/author",schemaPath:"#/properties/metadata/properties/author/minLength",keyword:"minLength",params:{limit: 1},message:"must NOT have fewer than 1 characters"}];return false;}}else {validate30.errors = [{instancePath:instancePath+"/metadata/author",schemaPath:"#/properties/metadata/properties/author/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid1 = _errs9 === errors;}else {var valid1 = true;}if(valid1){if(data1.authorID !== undefined){let data5 = data1.authorID;const _errs11 = errors;if(errors === _errs11){if(errors === _errs11){if(typeof data5 === "string"){if(!(formats0(data5))){validate30.errors = [{instancePath:instancePath+"/metadata/authorID",schemaPath:"#/properties/metadata/properties/authorID/format",keyword:"format",params:{format: "uri"},message:"must match format \""+"uri"+"\""}];return false;}}else {validate30.errors = [{instancePath:instancePath+"/metadata/authorID",schemaPath:"#/properties/metadata/properties/authorID/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}}var valid1 = _errs11 === errors;}else {var valid1 = true;}if(valid1){if(data1.title !== undefined){let data6 = data1.title;const _errs13 = errors;if(errors === _errs13){if(typeof data6 === "string"){if(func7(data6) < 1){validate30.errors = [{instancePath:instancePath+"/metadata/title",schemaPath:"#/properties/metadata/properties/title/minLength",keyword:"minLength",params:{limit: 1},message:"must NOT have fewer than 1 characters"}];return false;}}else {validate30.errors = [{instancePath:instancePath+"/metadata/title",schemaPath:"#/properties/metadata/properties/title/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid1 = _errs13 === errors;}else {var valid1 = true;}if(valid1){if(data1.tags !== undefined){let data7 = data1.tags;const _errs15 = errors;if(errors === _errs15){if(Array.isArray(data7)){var valid2 = true;const len0 = data7.length;for(let i0=0; i0<len0; i0++){const _errs17 = errors;if(typeof data7[i0] !== "string"){validate30.errors = [{instancePath:instancePath+"/metadata/tags/" + i0,schemaPath:"#/properties/metadata/properties/tags/items/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid2 = _errs17 === errors;if(!valid2){break;}}}else {validate30.errors = [{instancePath:instancePath+"/metadata/tags",schemaPath:"#/properties/metadata/properties/tags/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid1 = _errs15 === errors;}else {var valid1 = true;}if(valid1){if(data1.subject !== undefined){let data9 = data1.subject;const _errs19 = errors;if((typeof data9 !== "string") && (typeof data9 !== "boolean")){validate30.errors = [{instancePath:instancePath+"/metadata/subject",schemaPath:"#/properties/metadata/properties/subject/type",keyword:"type",params:{type: schema42.properties.metadata.properties.subject.type},message:"must be string,boolean"}];return false;}var valid1 = _errs19 === errors;}else {var valid1 = true;}if(valid1){if(data1.status !== undefined){let data10 = data1.status;const _errs21 = errors;if(typeof data10 !== "string"){validate30.errors = [{instancePath:instancePath+"/metadata/status",schemaPath:"#/properties/metadata/properties/status/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}if(!((((data10 === "complete") || (data10 === "in-progress")) || (data10 === "hiatus")) || (data10 === "abandoned"))){validate30.errors = [{instancePath:instancePath+"/metadata/status",schemaPath:"#/properties/metadata/properties/status/enum",keyword:"enum",params:{allowedValues: schema42.properties.metadata.properties.status.enum},message:"must be equal to one of the allowed values"}];return false;}var valid1 = _errs21 === errors;}else {var valid1 = true;}if(valid1){if(data1.rating !== undefined){let data11 = data1.rating;const _errs23 = errors;if(errors === _errs23){if(typeof data11 === "string"){if(func7(data11) < 1){validate30.errors = [{instancePath:instancePath+"/metadata/rating",schemaPath:"#/properties/metadata/properties/rating/minLength",keyword:"minLength",params:{limit: 1},message:"must NOT have fewer than 1 characters"}];return false;}}else {validate30.errors = [{instancePath:instancePath+"/metadata/rating",schemaPath:"#/properties/metadata/properties/rating/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}var valid1 = _errs23 === errors;}else {var valid1 = true;}if(valid1){if(data1.updated !== undefined){let data12 = data1.updated;const _errs25 = errors;if(errors === _errs25){if((typeof data12 == "number") && (isFinite(data12))){if(data12 < 1 || isNaN(data12)){validate30.errors = [{instancePath:instancePath+"/metadata/updated",schemaPath:"#/properties/metadata/properties/updated/minimum",keyword:"minimum",params:{comparison: ">=", limit: 1},message:"must be >= 1"}];return false;}else {let res0;if((1 === 0 || (res0 = data12/1, res0 !== parseInt(res0)))){validate30.errors = [{instancePath:instancePath+"/metadata/updated",schemaPath:"#/properties/metadata/properties/updated/multipleOf",keyword:"multipleOf",params:{multipleOf: 1},message:"must be multiple of 1"}];return false;}}}else {validate30.errors = [{instancePath:instancePath+"/metadata/updated",schemaPath:"#/properties/metadata/properties/updated/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}}var valid1 = _errs25 === errors;}else {var valid1 = true;}if(valid1){if(data1.published !== undefined){let data13 = data1.published;const _errs27 = errors;if(errors === _errs27){if((typeof data13 == "number") && (isFinite(data13))){if(data13 < 1 || isNaN(data13)){validate30.errors = [{instancePath:instancePath+"/metadata/published",schemaPath:"#/properties/metadata/properties/published/minimum",keyword:"minimum",params:{comparison: ">=", limit: 1},message:"must be >= 1"}];return false;}else {let res1;if((1 === 0 || (res1 = data13/1, res1 !== parseInt(res1)))){validate30.errors = [{instancePath:instancePath+"/metadata/published",schemaPath:"#/properties/metadata/properties/published/multipleOf",keyword:"multipleOf",params:{multipleOf: 1},message:"must be multiple of 1"}];return false;}}}else {validate30.errors = [{instancePath:instancePath+"/metadata/published",schemaPath:"#/properties/metadata/properties/published/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}}var valid1 = _errs27 === errors;}else {var valid1 = true;}if(valid1){if(data1.lang !== undefined){const _errs29 = errors;if(typeof data1.lang !== "string"){validate30.errors = [{instancePath:instancePath+"/metadata/lang",schemaPath:"#/properties/metadata/properties/lang/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid1 = _errs29 === errors;}else {var valid1 = true;}if(valid1){if(data1.description !== undefined){const _errs31 = errors;if(typeof data1.description !== "string"){validate30.errors = [{instancePath:instancePath+"/metadata/description",schemaPath:"#/properties/metadata/properties/description/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid1 = _errs31 === errors;}else {var valid1 = true;}if(valid1){if(data1.cover !== undefined){const _errs33 = errors;if(typeof data1.cover !== "string"){validate30.errors = [{instancePath:instancePath+"/metadata/cover",schemaPath:"#/properties/metadata/properties/cover/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid1 = _errs33 === errors;}else {var valid1 = true;}}}}}}}}}}}}}}}}else {validate30.errors = [{instancePath:instancePath+"/metadata",schemaPath:"#/properties/metadata/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid0 = _errs3 === errors;}else {var valid0 = true;}if(valid0){if(data.parts !== undefined){let data17 = data.parts;const _errs35 = errors;if(errors === _errs35){if(Array.isArray(data17)){var valid3 = true;const len1 = data17.length;for(let i1=0; i1<len1; i1++){let data18 = data17[i1];const _errs37 = errors;if(errors === _errs37){if(data18 && typeof data18 == "object" && !Array.isArray(data18)){let missing2;if((data18.title === undefined) && (missing2 = "title")){validate30.errors = [{instancePath:instancePath+"/parts/" + i1,schemaPath:"#/properties/parts/items/required",keyword:"required",params:{missingProperty: missing2},message:"must have required property '"+missing2+"'"}];return false;}else {if(data18.title !== undefined){const _errs39 = errors;if(typeof data18.title !== "string"){validate30.errors = [{instancePath:instancePath+"/parts/" + i1+"/title",schemaPath:"#/properties/parts/items/properties/title/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid4 = _errs39 === errors;}else {var valid4 = true;}if(valid4){if(data18.text !== undefined){const _errs41 = errors;if(typeof data18.text !== "string"){validate30.errors = [{instancePath:instancePath+"/parts/" + i1+"/text",schemaPath:"#/properties/parts/items/properties/text/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid4 = _errs41 === errors;}else {var valid4 = true;}}}}else {validate30.errors = [{instancePath:instancePath+"/parts/" + i1,schemaPath:"#/properties/parts/items/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid3 = _errs37 === errors;if(!valid3){break;}}}else {validate30.errors = [{instancePath:instancePath+"/parts",schemaPath:"#/properties/parts/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs35 === errors;}else {var valid0 = true;}if(valid0){if(data.cover !== undefined){const _errs43 = errors;if(typeof data.cover !== "string"){validate30.errors = [{instancePath:instancePath+"/cover",schemaPath:"#/properties/cover/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}var valid0 = _errs43 === errors;}else {var valid0 = true;}}}}}}else {validate30.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate30.errors = vErrors;return errors === 0;}validate30.evaluated = {"props":{"id":true,"metadata":true,"parts":true,"cover":true},"dynamicProps":false,"dynamicItems":false};